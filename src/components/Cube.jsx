/*
    Auto-generated by: https://github.com/pmndrs/gltfjsx
    Modified to remove animations for better performance and prevent position drift
*/

import { useGLTF, useTexture } from '@react-three/drei';
import { useRef } from 'react';
import { useFrame } from '@react-three/fiber';

const Cube = ({ ...props }) => {
  const { nodes } = useGLTF('models/cube.glb');
  const texture = useTexture('textures/cube.png');
  const cubeRef = useRef();

  // Store initial position to prevent drift
  const initialPosition = useRef(props.position || [0, 0, 0]);

  useFrame((state) => {
    if (cubeRef.current) {
      // Lock position to prevent drift during scroll
      cubeRef.current.position.set(
        initialPosition.current[0],
        initialPosition.current[1] + Math.sin(state.clock.elapsedTime * 0.8) * 0.1,
        initialPosition.current[2],
      );

      // Gentle rotation
      cubeRef.current.rotation.x = state.clock.elapsedTime * 0.2;
      cubeRef.current.rotation.y = state.clock.elapsedTime * 0.3;
    }
  });

  return (
    <group ref={cubeRef} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Cube.geometry} material={nodes.Cube.material}>
        <meshMatcapMaterial matcap={texture} toneMapped={false} />
      </mesh>
    </group>
  );
};

useGLTF.preload('models/cube.glb');

export default Cube;
